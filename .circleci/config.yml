version: 2.1
jobs:
  build:
    docker:
      - image: circleci/php:7.3-node-browsers
    steps:
      #checkoutは、GitHubからCircleCIの環境にソースコードをコピー(git clone)
      - checkout
      #sudoは他のユーザーの権限で実行するときのコマンドでオプションと実行するコマンドを組み合わせる
      #composer self-update --1はバージョン1の最新stable（安定版）にアップデート
      #バージョン1にする理由はcircleciのdocker imageがバージョン指定してインストールされていないため
      - run: sudo composer self-update --1
      #保存されたキャッシュを復元する
      - restore_cache:
          #keyには、復元するキャッシュの名前を指定
          key: composer-v1-{{ checksum "composer.lock" }}
      #composer.jsonに記録されているパッケージを、composer.lockに記録されているバージョンでインストール
      #-nは--no-interactionの略で対話形式にしないようにするコマンド
      #--prefer-dist zip形式でダウンロードする(高速)　書かなくてもdistがデフォルト
      - run: composer install -n --prefer-dist
      #save_cacheでは、keyに指定した名前でキャッシュを保存
      - save_cache:
          #キャッシュを無視して、新たにキャッシュを保存し直したい時はkeyに指定する名前の変更が必要
          #そんな時のために、あらかじめv1といった部分を名前に含めている
          #{{ checksum "composer.lock" }}という部分は、CircleCIのテンプレート機能を使用としてる
          #{{ checksum "ファイル名" }}とすることで、ファイルをハッシュ化した値を算出
          #もし、composer.lockに変更があれば、算出されるハッシュ値も異なったものとなり、キャッシュのkeyとして違った名前になり
          #その結果、restore_cacheでは、保存済みのキャッシュ(vendorディレクトリ)が復元されることはない
          key: composer-v1-{{ checksum "composer.lock" }}
          #保存するディレクトリ名やファイル名はpathsに指定
          paths:
            - vendor
      #npm ciはnpm installと違い package-lock.json から node_modules ディレクトリを構築
      #restore_cacheは復元
      - restore_cache:
          #npmによってインストールされたパッケージのキャッシュであることがわかるようにするため、先頭にnpm
          #package-lock.jsonでは、npmによってインストールされた各パッケージのバージョンが、依存パッケージも含め管理される
          key: npm-v1-{{ checksum "package-lock.json" }}
      - run:
          name: npm ci
          #複数行に渡ってコマンドを記述する時は、まず最初に|を記述
          #ifを逆さまに記述したfiは、if文の終わりを示す。[]は必須
          #[の直後と、]の直前にはそれぞれスペースが必須。!は、NOT条件
          #node_modulesというディレクトリが存在すればfalseを、存在しなければtrueを返す
          command: |
            if [ ! -d node_modules ]; then
              npm ci
            fi
      - save_cache:
          key: npm-v1-{{ checksum "package-lock.json" }}
          paths:
            - node_modules
      #JavaScriptのトランスパイル
      - run: npm run dev
      - run:
          name: php test
          command: vendor/bin/phpunit

